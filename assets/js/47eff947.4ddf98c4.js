"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[888],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),k=o,m=c["".concat(i,".").concat(k)]||c[k]||y[k]||a;return r?n.createElement(m,s(s({ref:t},u),{},{components:r})):n.createElement(m,s({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=k;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:o,s[1]=l;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},8169:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>y,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:3},s="Keystore",l={unversionedId:"usage/keystore",id:"usage/keystore",title:"Keystore",description:"Keystore is encrypted by a user's password or a Yubikey.",source:"@site/docs/usage/keystore.md",sourceDirName:"usage",slug:"/usage/keystore",permalink:"/tons-doc-test/usage/keystore",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Config",permalink:"/tons-doc-test/usage/config"},next:{title:"Whitelist",permalink:"/tons-doc-test/usage/whitelist"}},i={},p=[],u={toc:p},c="wrapper";function y(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"keystore"},"Keystore"),(0,o.kt)("p",null,"Keystore is encrypted by a user's password or a Yubikey.\nThere are several options to work with a password:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Runs a command and enter it through input")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ tons keystore new\nPassword []: \n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Runs a command with a --password flag")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ tons keystore new --password admin123\nPassword []: \n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Set up environment variable TONS_KEYSTORE_PASSWORD")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ export TONS_KEYSTORE_PASSWORD=admin123\n$ tons keystore new\n")),(0,o.kt)("p",null,"To work with a Yubikey you must set it up using the following steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"turn on PIV interface on your yubikey (you may use ",(0,o.kt)("a",{parentName:"li",href:"https://www.yubico.com/support/download/yubikey-manager/"},"yubikey manager"),")"),(0,o.kt)("li",{parentName:"ol"},"generate new key pair on the required slot. Consider using this command:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ ykman piv keys generate 0x87 - -m ${YOUR_MANAGEMENT_KEY} -P ${YOUR_PIN} --pin-policy ONCE --touch-policy ALWAYS -a RSA2048\n")),(0,o.kt)("p",null,"This command will:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"use your yubikey secrets. If you haven't set them up, ",(0,o.kt)("a",{parentName:"li",href:"https://docs.yubico.com/yesdk/users-manual/application-piv/pin-puk-mgmt-key.html"},"see docs"),"."),(0,o.kt)("li",{parentName:"ul"},"generate RSA2048(required) keys in the 0x87 slot(required)."),(0,o.kt)("li",{parentName:"ul"},"set policies to the new key. You may change --touch-policy, but we recommend to use ALWAYS.\nThe option --pin-policy ONCE is required by the tons.\nYou can read about policies ",(0,o.kt)("a",{parentName:"li",href:"https://docs.yubico.com/yesdk/users-manual/application-piv/pin-touch-policies.html"},"here"),".")),(0,o.kt)("p",null,"List all keystores in a tons.workdir"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ tons keystore list\ndev.keystore\ntest.keystore\n")),(0,o.kt)("p",null,"Create a new keystore"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ tons keystore new myNewKeystore\nPassword []: \n")),(0,o.kt)("p",null,"Backup a keystore (password is used to export private keys)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ tons keystore backup myNewKeystore ./myNewKeystore.backup\nPassword []: \n")),(0,o.kt)("p",null,"Restore a keystore (password is used for a new keystore)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ tons keystore restore keystoreFromBackup ./myOldKeystore.backup\nPassword []: \n\n# to restore keystore from ton-cli's keystore add flag --from-ton-cli\n$ tons keystore restore keystoreFromBackup ./ton-cli.backup --from-ton-cli\nPassword []: \n")))}y.isMDXComponent=!0}}]);